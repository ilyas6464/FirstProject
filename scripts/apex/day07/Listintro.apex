/**
Collection : for storing more than one values 
There are 3 types of collection 

List : ordered collection to store multiple values of same type 
Set  : unordered collection to store multiple unique values of same type removing
Map  : store key value pair in each element (more on that later)
 */

 // Syntax for Creating a list variable
 // and initializing it's value 

 // List< DataType > nameOfYourVariable 
            // = new List< DataType >(); 

 List<String> studentNames = new  List<String>() ; 

// We can use yourListVariable.add(what You want to add here);
// to add elements into the list
studentNames.add('Nurzat') ;
studentNames.add('Ali') ;
studentNames.add('Esra') ;

 System.debug(studentNames) ;// (Nurzat, Ali, Esra)

 /**
 Createn a List of Integer with name scores
 and add 5 items  in it
*/

List<Integer> scores = new List<Integer>() ;
scores.add(100);
scores.add(200);
scores.add(300);
scores.add(400);
scores.add(500);
System.debug(scores) ; // (100, 200, 300, 400, 500)

/**
Declare a list of Decimal variable called prices
and initilize it's value
Add 4 item|element  in it and print it out 
*/

list<Decimal>prices = new List <Decimal>();
prices.add(9.99);
prices.add(19.99);
prices.add(29.87);
prices.add(11000.54);

System.debug(prices) ; // (9.99, 19.99, 29.87, 11000.54)





